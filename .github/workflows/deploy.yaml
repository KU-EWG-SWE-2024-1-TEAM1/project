name: CI/CD for Frontend and Backend

on:
  push:
    branches: [main]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby
          sudo gem install mustache

      - name: Create output directory and copy files
        run: |
          mkdir -p output
          cp -R ./fe/* ./output
          chmod +x ./build.sh
          sh ./build.sh

      - name: Check output directory
        run: |
          if [ -d "./output" ]; then
            echo "Output directory exists."
            ls -la ./output
          else
            echo "Output directory does not exist."
          fi

      - name: Push to another repository
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.MYREPOSITORYKEY }}
        with:
          source-directory: 'output'
          destination-github-username: JONGHYUNVAN
          destination-repository-name: moviemovit
          user-email: ${{ secrets.MYEMAIL }}
          commit-message: ${{ github.event.commits[0].message }}
          target-branch: main

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: be/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('be/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          cd be
          npm install

      - name: Build project
        run: |
          cd be
          npm run build

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script_stop: true
          script: |
            cd project/be
            git pull origin main
            npm install
            npm run build
            pm2 stop nestjs-app || true
            sleep 3
            pm2 delete nestjs-app || true
            sleep 3
            pm2 start dist/main.js --name nestjs-app
